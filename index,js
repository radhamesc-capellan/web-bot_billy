import express from "express";
import OpenAI from "openai";
import dotenv from "dotenv";
dotenv.config();

const app = express();
app.use(express.json());

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

let chatHistory = [];

app.get("/start", (req, res) => {
  chatHistory = [];
  res.send("Chat iniciado");
});

app.post("/message", async (req, res) => {
  const userInput = req.body.message;

  if (!userInput || typeof userInput !== "string") {
    return res.status(400).json({ error: "Entrada Invalida" });
  }

  try {
    const messages = chatHistory.map(([role, content]) => ({
      role,
      content: content || "",
    }));

    messages.push({ role: "user", content: userInput });

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo-0301",
      messages: messages,
    });

    const completionText = completion.choices[0].message.content;

    chatHistory.push(["user", userInput]);
    chatHistory.push(["assistant", completionText]);

    res.json({ message: completionText });

    logChatHistory(chatHistory);

  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Algo saliÃ³ mal" });
  }
});

function logChatHistory(chatHistory) {
    console.log("Chat history:");
    chatHistory.forEach((message) => {
      console.log(`[${message[0]}]: ${message[1]}`)
    });
  }
  
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
